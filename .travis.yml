matrix:
  include:
    #dataModelling
    - language: python
      python: 3.7
      before-install:
        - cd dataModelling
      install:
        - pip3 install -r requirements.txt
      script:
        #- python3 app.py
        - echo "test dataRetrieval"

      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - docker build -t orenda15/user_management:latest .
        - docker push orenda15/user_management:latest

    #dataRetrieval
    - language: python
      python: 3.7
      before-install:
        - cd dataRetrieval
      install:
        - pip3 install -r requirements.txt
      script:
        # - python3 app.py
        - echo "test dataRetrieval"

      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - docker build -t orenda15/user_management:latest .
        - docker push orenda15/user_management:latest

    #userManagement
    - node_js: 10.16
      before-install:
        - cd userManagement
      install:
        - npm install

      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - docker build -t orenda15/user_management:latest .
        - docker push orenda15/user_management:latest

    #sessionManagement
    - language: node_js
      node_js: 10.16
      before-install:
        - cd sessionManagement
      install:
        - npm install
      script: 
        - npm test 
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - docker build -t orenda15/session_management:latest .
        - docker push orenda15/session_management:latest

    #apiGateway
    - language: node_js
      node_js: 10.16
      before-install:
        - cd APIgateway
      install:
        - npm install
      script: 
          - echo "test api_gateway"
      #   - npm start
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - docker build -t orenda15/api_gateway:latest .
        - docker push orenda15/api_gateway:latest


    #frontend
    - language: node_js
      node_js: 10.16
      before-install:
        - cd frontend
      install:
        - npm install
      script: 
          - echo "test frontend"
      #   - npm start
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - docker build -t orenda15/frontend:latest .
        - docker push orenda15/frontend:latest

    #dataAnalysis
    - language: java
      jdk: openjdk8
      java: 8
      before-script:
        - cd data_analysis
      script:
        - mvn -Dmaven.test.skip test-compile jar:test-jar install
      after_success:
        - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        - docker build -t orenda15/data_analysis:latest .
        - docker push orenda15/data_analysis:latest
        
branches:
  only:
  - develop
  
